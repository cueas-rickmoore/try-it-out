#!/bin/bash
this_script_name=`basename "$0"`
# should be installed in /usr/local/bin on Macs and Linux
#
# the following code assumes that "anaconda.sh" has been sourced

install_type="basic"
pkg_idx=0
pkg_filepath="not set"
pyversion=$PYTHON_ENV_DEFAULT
shared=false
user_home=$HOME
user_name=$LOGNAME
venv_name="not set"

while (( "$#" )); do
    case $1 in
        -a) install_type="anaconda" ; shift ;;
        -f) install_type="file" ; shift ;
            pkg_filepath=$1 ; shift ;
            ;;
        -n) shift; venv_name=$1 ; shift ;;
        -p) shift; pyversion=$1 ; shift ;;
        -s) echo "create a shared environment"
            shared=true ; shift ;;

        -h) echo " " ; echo "usage: ${this_script_name} -n environment_name [...]";
            echo " " ; echo "arguments :";
            echo "  -a           create environment containing full Anaconda distribution";
            echo "  -f filepath  create environment containing packages in file @ filepath";
            echo "  -p           Python version number (default = ${PYTHON_ENV_DEFAULT}";
            echo "  -s           create a shared environment (default creates personal environment";
            echo " [...]         list of additional Python packages to install";
            echo " ";
            echo "Default action is to create a basic environment unless -a or -f args are used.";
            echo "    The list of basic packages will be read from 'anaconda-base-pkgs.txt'";
            echo "    in ${ANACONDA_COMMON_ROOT}/scripts unless there is a file in $user_home";
            echo "    with the same name.";
            echo " ";
            exit
            ;;
        *) break ;;
    esac
done

if [ $venv_name = "not set" ] ; then
    echo "ERROR : no environment name was specified."
    echo "    add -n your_env_name to your command and retry"
    exit
fi

num_additional_pkgs=$#

echo "Requested installation of :"
if [ $shared = true ] ; then
    echo "    shared ECRL Python ${pyversion} environment '${venv_name}'"
else
    echo "    ${user_name} personal Python ${pyversion} environment '${venv_name}'"
fi

if [ $install_type = anaconda ] ; then
    echo "   installing full Anaconda package set"
elif [ $install_type = file ] ; then
    if [ -f $pkg_filepath ] ; then
        echo "    installing packages from file"
        echo "        " $pkg_filepath
    else
        echo "ERROR : requsted package file does not exist on this system"
        echo "    " $pkg_filepath
        echo "Check path and try again"
        exit
    fi
else
    echo "installing basic package set"
    echo "    " $basic_pkgs
fi

if [ "$num_additional_pkgs" -gt 0 ] ; then
    packages="$@"
    echo "additional packages requested :"
    echo "    " $packages
else
    packages=()
fi

if [ $shared = true ] ; then
    venv_root_path=$ANACONDA_SHARED_ROOT
else
    venv_root_path=$ANACONDA_USERS_ROOT/$LOGNAME
fi
venv_path=$venv_root_path/$venv_name

if [ "$pyversion" = 3 ] ; then
    pyversion=$PYTHON3_DEFAULT
elif [ "$pyversion" = 2 ] ; then
    pyversion=$PYTHON2_DEFAULT
fi

if [ ${pyversion:0:1} = "3" ] ; then
    conda_home_path=$MINICONDA3_DIRPATH
else
    conda_home_path=$MINICONDA2_DIRPATH
fi

if [ "$install_type" = anaconda ] ; then
    echo "Creating full Anaconda Python ${pyversion} environment in :"
    echo "    ${venv_path}"
    $conda_home_path/bin/conda create -p $venv_path python=$pyversion anaconda $packages

elif [ "$install_type" = file ] ; then
    if [ -f $pkg_filepath ] ; then
        echo "creating Python ${pyversion} environment in :"
        echo "    ${venv_path}"
        echo "from $pkg_filepath"
    fi
    $conda_home_path/conda create --no-default-packages -p $venv_path --file $pkg_filepath $packages

else
    echo "creating basic scientific Python ${pyversion} environment in :"
    echo "    ${venv_path}"
    package_file=$user_home/anaconda-base-pkgs.txt
    if [ ! -f $package_file ] ; then
        package_file=$ANACONDA_COMMON_ROOT/scripts/anaconda-base-pkgs.txt
    fi
    echo "    containing packages in ${package_file}"
    $conda_home_path/bin//conda create --no-default-packages -p $venv_path --file $package_file python=$pyversion $packages
fi

if [ -d $venv_path ] ; then
    echo "successfully created Python environment in :"
    echo "    ${venv_path}"
    export venv_name="`basename $venv_path`"

    cd $venv_path
    ln -s lib/python$pyversion/site-packages .

    cd $venv_path/bin
    if [ ! -f "conda" ] ; then
        echo "linking conda command to " $venv_name
        ln -s $conda_home_path/bin/conda .
    fi
    if [ ! -f "activate" ] ; then
        ln -s $conda_home_path/bin/activate .
    fi
    if [ ! -f "deactivate" ] ; then
        ln -s $conda_home_path/bin/deactivate .
    fi
fi
